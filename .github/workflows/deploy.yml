name: Deploy APICongress
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-apicongress:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy APICongress
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 1800s           # 30 minutes total session timeout
          command_timeout: 600s    # 10 minutes per command
          script: |
            # 1) Create a backup folder
            mkdir -p /tmp/apicongress_backup

            # 2) Backup critical files (e.g., .env)
            cd /opt/apicongress/APICongress
            [ -f .env ] && cp .env /tmp/apicongress_backup/

            # 3) Stop and remove existing containers
            docker compose down --remove-orphans || true

            # 4) Remove old code
            rm -rf .* * || true

            # 5) Clone the latest code from GitHub (ensure the URL is correct)
            echo "Cloning APICongress repository..."
            git clone git@github.com:isaacbrendel/APICongress.git .

            # 6) Restore critical files
            [ -f /tmp/apicongress_backup/.env ] && cp /tmp/apicongress_backup/.env .

            # 7) Build and run new containers
            echo "Building and running new containers..."
            docker compose build --no-cache
            docker compose up -d

            # 8) Wait for services to start
            sleep 10

            # 9) Display Docker Compose status and logs for the apicongress container
            echo "===== Docker Compose Status ====="
            docker compose ps
            docker compose logs --tail=50 apicongress

            # 10) Cleanup backup
            rm -rf /tmp/apicongress_backup
